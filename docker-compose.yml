services:
  postgres:
    image: postgres:latest
    container_name: postgresDB_Container
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network


  scraper:
    build: .
    container_name: scraper_Container
    volumes:
      - .:/usr/src/app
      - ./hotel_images:/usr/src/app/hotel_images
    working_dir: /usr/src/app
    depends_on:
      postgres:
        condition: service_healthy  
    networks:
      - app_network
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+psycopg2://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    ports:
      - "8001:8001"
    command: ["scrapy", "crawl", "tripCrawler"]


  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_Container
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - app_network

  tests:
    build: .
    container_name: tests_Container
    depends_on:
      postgres:
        condition: service_healthy  
    networks:
      - app_network
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+psycopg2://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    command: ["pytest", "--cov=trip_crawler", "tests/", "--cov-report=html"]

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer_Container
    ports:
      - "9443:9443"
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped


volumes:
  postgres_data:
  pgadmin_data:
  portainer-data:

networks:
  app_network:
    driver: bridge
